function AlertsCtrl(l) {
	l.alerts = [{
			type : "announcement",
			title : "LATEST ANNOUNCEMENT",
			msg : "This is a place for announcements to be pushed for everyone to see. Can contain important information or notifications. Users will be able to close this if they wish, or leave it open."
		}, {
			type : "danger",
			title : "IMPORTANT ALERT",
			msg : "Found a bug? Create an issue with as many details as you can."
		}
	],
	l.addAlert = function () {
		l.alerts.push({
			msg : "Another alert!"
		})
	},
	l.closeAlert = function (t) {
		l.alerts.splice(t, 1)
	}
}
function dashboardCtrl($scope, $compile, $http) {
	var prev_infoWindow;
	getrefdata().then(function(data) {
		createMarkers($scope.Records);
	});
	n = {
		center : {
			lat : 21.482353,
			lng : -157.855729
		},
		zoom : 10,
		mapTypeId : google.maps.MapTypeId.ROADMAP
	};
	$scope.map = new google.maps.Map(document.getElementById("dashmap"), n);
	var e = [{ lng : -158.1288, lat : 21.3511 }, { lng : -158.12366, lat : 21.35394 }, { lng : -158.11592, lat : 21.35654 }, { lng : -158.10467, lat : 21.35606 }, { lng : -158.09223, lat : 21.35054 }, { lng : -158.07834, lat : 21.34594 }, { lng : -158.06133, lat : 21.34279 }, { lng : -158.04537, lat : 21.34423 }, { lng : -158.0282, lat : 21.35104 }, { lng : -158.02022, lat : 21.35838 }, { lng : -158.01378, lat : 21.35446 }, { lng : -157.99421, lat : 21.35366 }, { lng : -157.99148, lat : 21.34842 }, { lng : -157.98246, lat : 21.34901 }, { lng : -157.97052, lat : 21.33303 }, { lng : -157.97001, lat : 21.32335 }, { lng : -157.97739, lat : 21.31609 }, { lng : -158.02638, lat : 21.30459 }, { lng : -158.07637, lat : 21.29754 }, { lng : -158.09524, lat : 21.29461 }, { lng : -158.10878, lat : 21.29703 }, { lng : -158.12418, lat : 21.32555 }, { lng : -158.13049, lat : 21.34925 } ],
	g = new google.maps.Polygon({
			name : "Ewa",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	g.setMap($scope.map),
	e = [{ lng : -158.28243, lat : 21.5754 }, { lng : -158.26228, lat : 21.57279 }, { lng : -158.24384, lat : 21.56874 }, { lng : -158.20093, lat : 21.55122 }, { lng : -158.17017, lat : 21.52878 }, { lng : -158.15523, lat : 21.51457 }, { lng : -158.13354, lat : 21.50869 }, { lng : -158.11832, lat : 21.49907 }, { lng : -158.10985, lat : 21.48489 }, { lng : -158.08677, lat : 21.44928 }, { lng : -158.08674, lat : 21.4168 }, { lng : -158.09875, lat : 21.37988 }, { lng : -158.13034, lat : 21.34942 }, { lng : -158.13201, lat : 21.35816 }, { lng : -158.13963, lat : 21.37195 }, { lng : -158.15103, lat : 21.38495 }, { lng : -158.16429, lat : 21.39608 }, { lng : -158.17581, lat : 21.39981 }, { lng : -158.18047, lat : 21.4271 }, { lng : -158.21492, lat : 21.4641 }, { lng : -158.23121, lat : 21.48305 }, { lng : -158.22966, lat : 21.53436 }, { lng : -158.24956, lat : 21.5561 }, { lng : -158.25994, lat : 21.56068 }, { lng : -158.26346, lat : 21.56493 }, { lng : -158.27149, lat : 21.57048 } 	];
	var o = new google.maps.Polygon({
			name : "Leeward Coast",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	o.setMap($scope.map),
	e = [{ lng : -158.09918, lat : 21.37964 }, { lng : -158.08762, lat : 21.38036 }, { lng : -158.07365, lat : 21.37956 }, { lng : -158.05522, lat : 21.37592 }, { lng : -158.03888, lat : 21.37039 }, { lng : -158.02511, lat : 21.36805 }, { lng : -158.02064, lat : 21.35853 }, { lng : -158.02801, lat : 21.35077 }, { lng : -158.04557, lat : 21.34442 }, { lng : -158.06125, lat : 21.34254 }, { lng : -158.07895, lat : 21.34582 }, { lng : -158.09329, lat : 21.35052 }, { lng : -158.10402, lat : 21.35617 }, { lng : -158.11587, lat : 21.35703 }, { lng : -158.12755, lat : 21.35181 }, { lng : -158.1104, lat : 21.36815 } ]; 	var i = new google.maps.Polygon({
			name : "Makakilo",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	i.setMap($scope.map),
	e = [{ lng : -157.93396, lat : 21.66891 }, { lng : -157.96367, lat : 21.64003 }, { lng : -157.97585, lat : 21.6086 }, { lng : -157.9707, lat : 21.57157 }, { lng : -157.924, lat : 21.53517 }, { lng : -157.86667, lat : 21.45978 }, { lng : -157.83817, lat : 21.4144 }, { lng : -157.82101, lat : 21.39426 }, { lng : -157.8035, lat : 21.37892 }, { lng : -157.79251, lat : 21.37732 }, { lng : -157.73023, lat : 21.399 }, { lng : -157.74066, lat : 21.4183 }, { lng : -157.73392, lat : 21.44208 }, { lng : -157.71907, lat : 21.46151 }, { lng : -157.73113, lat : 21.46153 }, { lng : -157.74593, lat : 21.45323 }, { lng : -157.76622, lat : 21.46507 }, { lng : -157.77278, lat : 21.45582 }, { lng : -157.77718, lat : 21.44608 }, { lng : -157.76235, lat : 21.43506 }, { lng : -157.76839, lat : 21.42006 }, { lng : -157.78254, lat : 21.41433 }, { lng : -157.78653, lat : 21.4364 }, { lng : -157.80425, lat : 21.43226 }, { lng : -157.81565, lat : 21.45849 }, { lng : -157.83983, lat : 21.46365 }, { lng : -157.83965, lat : 21.48501 }, { lng : -157.85114, lat : 21.50572 }, { lng : -157.83207, lat : 21.50854 }, { lng : -157.83498, lat : 21.52989 }, { lng : -157.84629, lat : 21.55757 }, { lng : -157.87476, lat : 21.56545 }, { lng : -157.87673, lat : 21.57908 }, { lng : -157.91857, lat : 21.6293 }, { lng : -157.91578, lat : 21.64888 } ]; 	var r = new google.maps.Polygon({
			name : "Kaneohe",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	r.setMap($scope.map),
	e = [{ lng : -157.72943, lat : 21.3993 }, { lng : -157.76087, lat : 21.38853 }, { lng : -157.79258, lat : 21.37768 }, { lng : -157.80286, lat : 21.37867 }, { lng : -157.7795, lat : 21.3512 }, { lng : -157.74926, lat : 21.32792 }, { lng : -157.70711, lat : 21.31201 }, { lng : -157.66694, lat : 21.2873 }, { lng : -157.65752, lat : 21.29323 }, { lng : -157.65033, lat : 21.29997 }, { lng : -157.64832, lat : 21.31088 }, { lng : -157.65789, lat : 21.31111 }, { lng : -157.66096, lat : 21.31659 }, { lng : -157.6685, lat : 21.31774 }, { lng : -157.67627, lat : 21.32501 }, { lng : -157.69057, lat : 21.33163 }, { lng : -157.70604, lat : 21.35302 }, { lng : -157.70764, lat : 21.36767 }, { lng : -157.70503, lat : 21.38119 }, { lng : -157.70753, lat : 21.38228 }, { lng : -157.71089, lat : 21.38832 }, { lng : -157.71615, lat : 21.39464 } ]; 	var s = new google.maps.Polygon({
			name : "Kailua",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	s.setMap($scope.map),
	e = [{ lng : -157.83302, lat : 21.2785 }, { lng : -157.81323, lat : 21.30966 }, { lng : -157.77902, lat : 21.35105 }, { lng : -157.75015, lat : 21.32869 }, { lng : -157.70756, lat : 21.31207 }, { lng : -157.66634, lat : 21.28841 }, { lng : -157.67964, lat : 21.27746 }, { lng : -157.69501, lat : 21.2569 }, { lng : -157.7108, lat : 21.25777 }, { lng : -157.71166, lat : 21.2758 }, { lng : -157.71767, lat : 21.28104 }, { lng : -157.7496, lat : 21.27574 }, { lng : -157.76796, lat : 21.27029 }, { lng : -157.79114, lat : 21.2546 }, { lng : -157.81448, lat : 21.25554 }, { lng : -157.82341, lat : 21.26372 }, { lng : -157.8265, lat : 21.27446 } ]; 	var d = new google.maps.Polygon({
			name : "Diamond Head",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	d.setMap($scope.map),
	e = [{ lng : -157.941, lat : 21.30329 }, { lng : -157.93468, lat : 21.3363 }, { lng : -157.92394, lat : 21.35673 }, { lng : -157.9053, lat : 21.37365 }, { lng : -157.88723, lat : 21.38809 }, { lng : -157.86607, lat : 21.39853 }, { lng : -157.82616, lat : 21.39959 }, { lng : -157.80196, lat : 21.37895 }, { lng : -157.77879, lat : 21.35159 }, { lng : -157.81493, lat : 21.30851 }, { lng : -157.83253, lat : 21.27918 }, { lng : -157.84746, lat : 21.28201 }, { lng : -157.87131, lat : 21.29699 }, { lng : -157.90358, lat : 21.30302 } ]; 	var c = new google.maps.Polygon({
			name : "Honolulu",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	c.setMap($scope.map),
	e = [{ lng : -157.99026, lat : 21.38659 }, { lng : -157.94432, lat : 21.4444 }, { lng : -157.92417, lat : 21.47555 }, { lng : -157.89852, lat : 21.50158 }, { lng : -157.86684, lat : 21.45962 }, { lng : -157.83855, lat : 21.41465 }, { lng : -157.82537, lat : 21.39971 }, { lng : -157.86493, lat : 21.39909 }, { lng : -157.88745, lat : 21.38887 }, { lng : -157.90517, lat : 21.37321 }, { lng : -157.92362, lat : 21.35704 }, { lng : -157.93486, lat : 21.33542 }, { lng : -157.94155, lat : 21.3037 }, { lng : -157.95074, lat : 21.30602 }, { lng : -157.96096, lat : 21.31762 }, { lng : -157.96785, lat : 21.33282 }, { lng : -157.96752, lat : 21.35026 }, { lng : -157.94933, lat : 21.35801 }, { lng : -157.93527, lat : 21.376 }, { lng : -157.95882, lat : 21.38641 }, { lng : -157.96768, lat : 21.38627 }, { lng : -157.96659, lat : 21.37814 }, { lng : -157.96956, lat : 21.36828 }, { lng : -157.97768, lat : 21.37743 } ]; 	var p = new google.maps.Polygon({
			name : "Pearl City",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	p.setMap($scope.map),
	e = [{ lng : -158.08777, lat : 21.43262 }, { lng : -158.05165, lat : 21.44661 }, { lng : -158.0169, lat : 21.44208 }, { lng : -157.9726, lat : 21.4498 }, { lng : -157.93174, lat : 21.46392 }, { lng : -157.98923, lat : 21.38739 }, { lng : -157.97688, lat : 21.36949 }, { lng : -157.97121, lat : 21.35854 }, { lng : -157.97155, lat : 21.34119 }, { lng : -157.9862, lat : 21.35035 }, { lng : -158.00119, lat : 21.35599 }, { lng : -158.01108, lat : 21.37367 }, { lng : -158.01921, lat : 21.36453 }, { lng : -158.03625, lat : 21.36977 }, { lng : -158.06417, lat : 21.37738 }, { lng : -158.09997, lat : 21.38096 }, { lng : -158.08769, lat : 21.41606 } ]; 	var m = new google.maps.Polygon({
			name : "Waipahu",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	m.setMap($scope.map),
	e = [{ lng : -158.13171, lat : 21.5061 }, { lng : -158.10845, lat : 21.50017 }, { lng : -158.07833, lat : 21.51212 }, { lng : -158.0428, lat : 21.50537 }, { lng : -158.01293, lat : 21.52891 }, { lng : -157.92263, lat : 21.53331 }, { lng : -157.89894, lat : 21.50195 }, { lng : -157.918, lat : 21.48342 }, { lng : -157.93018, lat : 21.46361 }, { lng : -157.97302, lat : 21.44925 }, { lng : -158.01669, lat : 21.44086 }, { lng : -158.05006, lat : 21.44846 }, { lng : -158.08589, lat : 21.43488 }, { lng : -158.0858, lat : 21.44717 }, { lng : -158.10567, lat : 21.47696 }, { lng : -158.11732, lat : 21.49952 } ]; 	var u = new google.maps.Polygon({
			name : "Central Oahu",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	u.setMap($scope.map),
	e = [{ lng : -158.28312, lat : 21.57636 }, { lng : -158.19059, lat : 21.58346 }, { lng : -158.156, lat : 21.58063 }, { lng : -158.11935, lat : 21.58737 }, { lng : -158.10753, lat : 21.5978 }, { lng : -158.10944, lat : 21.60375 }, { lng : -158.08423, lat : 21.62088 }, { lng : -158.07206, lat : 21.63417 }, { lng : -158.06116, lat : 21.65735 }, { lng : -158.01318, lat : 21.69982 }, { lng : -157.97344, lat : 21.71198 }, { lng : -157.94976, lat : 21.69534 }, { lng : -157.93295, lat : 21.66976 }, { lng : -157.9618, lat : 21.64258 }, { lng : -157.97536, lat : 21.60953 }, { lng : -157.9745, lat : 21.58414 }, { lng : -157.92335, lat : 21.53398 }, { lng : -158.01079, lat : 21.52954 }, { lng : -158.04536, lat : 21.50529 }, { lng : -158.07744, lat : 21.51293 }, { lng : -158.10814, lat : 21.50078 }, { lng : -158.15514, lat : 21.5148 }, { lng : -158.19798, lat : 21.55018 }, { lng : -158.24415, lat : 21.56901 } ]; 	var h = new google.maps.Polygon({
			name : "North Shore",
			paths : e,
			strokeColor : "#FF0000",
			strokeOpacity : .8,
			strokeWeight : 2,
			fillColor : "#FF0000",
			fillOpacity : .35
		});
	h.setMap($scope.map),
	google.maps.event.addListener(g, "click", function (l) {
		getContain($scope.Records, g);
	}),
	google.maps.event.addListener(o, "click", function (l) {
		getContain($scope.Records, o);
	}),
	google.maps.event.addListener(i, "click", function (l) {
		getContain($scope.Records, i);
	}),
	google.maps.event.addListener(r, "click", function (l) {
		getContain($scope.Records, r);
	}),
	google.maps.event.addListener(s, "click", function (l) {
		cgetContain($scope.Records, s);
	}),
	google.maps.event.addListener(d, "click", function (l) {
		getContain($scope.Records, d);
	}),
	google.maps.event.addListener(c, "click", function (l) {
		getContain($scope.Records, c);
	}),
	google.maps.event.addListener(p, "click", function (l) {
		getContain($scope.Records, p);
	}),
	google.maps.event.addListener(m, "click", function (l) {
		getContain($scope.Records, m);
	}),
	google.maps.event.addListener(u, "click", function (l) {
		getContain($scope.Records, u);
	}),
	google.maps.event.addListener(h, "click", function (l) {
		getContain($scope.Records, h);
	})
	function getrefdata() {
		return $http.get("http://test.ohai-app.com/responderMarker.php")
			.success(function (response) {
				$scope.Records = response.markers;
			});
	}
	
	function createMarkers(records) {
		console.log(records);
		for (var i = 0; i < records.length; i++) {
			var record = records[i];
			var markerPos = new google.maps.LatLng(record.lat, record.lng);
			// Add the markerto the map
			var marker = new google.maps.Marker({
					name : record.name,
					address : record.address,
					category : record.cat,
					map : $scope.map,
					animation : google.maps.Animation.DROP,
					position : markerPos
				});
			addInfoWindow(marker, record, i);
		}
	}
	function addInfoWindow(marker, record, i) {

		var contentString = "<span ng-click='toggleDetails(" + i + "); gotoLocation(" + record.lat + "," + record.lng + ")'><a ng-click='toggleDetails(" + i + "); gotoLocation(" + record.lat + "," + record.lng + ")' class='infowindow-name'>" + record.name + "</a><div class='infowindow-img'><img class='infowindow-imglink' src='" + record.imgurl + "'></div><div class='infowindow'></span><p><span class='info-subheader'>Date referred</span> " + record.referdate + "</p><p><span class='info-subheader'>gender</span>: " + record.gender + "</p></div>";

		var compileContent = $compile(contentString)($scope);

		var infoWindow = new google.maps.InfoWindow({
				content : compileContent[0]
			});

		google.maps.event.addListener(marker, 'click', function () {
			if (prev_infoWindow) {
				prev_infoWindow.close();
			}
			prev_infoWindow = infoWindow;
			infoWindow.open($scope.map, marker);
		});

	}
	function getContain(records, district){
		for (var i = 0; i < records.length; i++){
			var record = records[i];
			var markerPos = new google.maps.LatLng(record.lat, record.lng);
			if(google.maps.geometry.poly.containsLocation(markerPos, district)) {
				console.log(record.name);
			}
		}
	}
}
function MasterCtrl(l, t) {
	var a = 992;
	l.getWidth = function () {
		return window.innerWidth
	},
	l.$watch(l.getWidth, function (n, e) {
		n >= a ? angular.isDefined(t.get("toggle")) ? l.toggle = !!t.get("toggle") : l.toggle = !0 : l.toggle = !1
	}),
	l.toggleSidebar = function () {
		l.toggle = !l.toggle,
		t.put("toggle", l.toggle)
	},
	window.onresize = function () {
		l.$apply()
	}
}
function iamShared() {
	console.log("called")
}
function rdLoading() {
	var l = {
		restrict : "AE",
		template : '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
	};
	return l
}
function rdWidgetBody() {
	var l = {
		requires : "^rdWidget",
		scope : {
			loading : "@?",
			classes : "@?"
		},
		transclude : !0,
		template : '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
		restrict : "E"
	};
	return l
}
function rdWidgetFooter() {
	var l = {
		requires : "^rdWidget",
		transclude : !0,
		template : '<div class="widget-footer" ng-transclude></div>',
		restrict : "E"
	};
	return l
}
function rdWidgetTitle() {
	var l = {
		requires : "^rdWidget",
		scope : {
			title : "@",
			icon : "@"
		},
		transclude : !0,
		template : '<div class="widget-header"><div class="row"><div class="pull-left"><i class="fa" ng-class="icon"></i> {{title}} </div><div class="pull-right col-xs-6 col-sm-4" ng-transclude></div></div></div>',
		restrict : "E"
	};
	return l
}
function rdWidget() {
	var l = {
		transclude : !0,
		template : '<div class="widget" ng-transclude></div>',
		restrict : "EA"
	};
	return l
}
angular.module("RDash", ["ui.bootstrap", "ui.router", "ngCookies"]), angular.module("RDash").config(["$stateProvider", "$urlRouterProvider", function (l, t) {
			t.otherwise("/"),
			l.state("index", {
				url : "/",
				templateUrl : "pages/login.html"
			}).state("public", {
				"abstract" : !0,
				template : "<ui-view/>"
			}).state("public.site", {
				url : "/site",
				controllerAs : "site",
				templateUrl : "pages/site.html"
			}).state("public.site.login", {
				url : "/login",
				templateUrl : "pages/login.html"
			}).state("private", {
				"abstract" : !0,
				template : "<ui-view/>"
			}).state("private.admin", {
				url : "/admin",
				controllerAs : "admin",
				templateUrl : "pages/admin/admin.html"
			}).state("private.admin.dashboard", {
				url : "/dashboard",
				templateUrl : "pages/admin/dashboard.html"
			}).state("private.admin.coordinators", {
				url : "/coordinators",
				templateUrl : "pages/admin/coordinators.html"
			}).state("private.admin.appcontent", {
				url : "/appcontent",
				templateUrl : "pages/admin/appcontent.html"
			})
		}
	]), angular.module("RDash").controller("dashboardCtrl", ["$scope", "$compile", "$http", dashboardCtrl]), angular.module("RDash").controller("AlertsCtrl", ["$scope", AlertsCtrl]), angular.module("RDash").controller("MasterCtrl", ["$scope", "$cookieStore", MasterCtrl]), angular.module("RDash").directive("rdLoading", rdLoading), angular.module("RDash").directive("rdWidgetBody", rdWidgetBody), angular.module("RDash").directive("rdWidgetFooter", rdWidgetFooter), angular.module("RDash").directive("rdWidgetHeader", rdWidgetTitle), angular.module("RDash").directive("rdWidget", rdWidget);